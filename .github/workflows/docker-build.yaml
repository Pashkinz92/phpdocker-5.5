name: build-all-containers

on:
  push:
    branches:
      - "master"

  # Allow workflow to be manually run from the GitHub UI
  workflow_dispatch:

  # Daily build
  schedule:
    - cron: "0 2 * * *"

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: nginx-pagespeed
            folder: nginx-pagespeed
            arch: [linux/amd64]
            targets:
              primary:
                name: ~
                repo_name: nginx-pagespeed
                tag: latest
              secondary: ~
              tertiary: ~

          - name: php72
            folder: php/7.2
            arch: [linux/amd64, linux/arm64]
            targets:
              primary:
                name: cli
                repo_name: php72-cli
                tag: latest
              secondary:
                name: fpm
                repo_name: php72-fpm
                tag: latest
              tertiary: ~

          - name: php73
            folder: php/7.3
            arch: [linux/amd64, linux/arm64]
            targets:
              primary:
                name: cli
                repo_name: php73-cli
                tag: latest
              secondary:
                name: fpm
                repo_name: php73-fpm
                tag: latest
              tertiary: ~

          - name: php74
            folder: php/7.4
            arch: [linux/amd64, linux/arm64]
            targets:
              primary:
                name: cli
                repo_name: php74-cli
                tag: latest
              secondary:
                name: fpm
                repo_name: php74-fpm
                tag: latest
              tertiary:
                name: swoole
                repo_name: php74-swoole
                tag: latest

          - name: php80
            folder: php/8.0
            arch: [linux/amd64, linux/arm64]
            targets:
              primary:
                name: cli
                repo_name: php80-cli
                tag: latest
              secondary:
                name: fpm
                repo_name: php80-fpm
                tag: latest
              tertiary:
                name: swoole
                repo_name: php80-swoole
                tag: latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push primary container
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.folder }}
          platforms: ${{ join(matrix.arch, ',') }}
          push: true
          pull: true
          tags: phpdockerio/${{ format('{0}:{1}', matrix.targets.primary.repo_name, matrix.targets.primary.tag) }}
          target: ${{ matrix.targets.primary.name }}
          cache-from: type=registry,ref=phpdockerio/${{ matrix.targets.primary.repo_name }}
          cache-to: inline

      - name: Build and push secondary container
        if: matrix.targets.secondary
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.folder }}
          platforms: ${{ join(matrix.arch, ',') }}
          push: true
          pull: true
          tags: phpdockerio/${{ matrix.targets.secondary.repo_name }}:${{ matrix.targets.secondary.tag }}
          target: ${{ matrix.targets.secondary.name }}
          cache-from: type=registry,ref=phpdockerio/${{ matrix.targets.secondary.repo_name }}
          cache-to: inline

      - name: Build and push tertiary container
        if: matrix.targets.tertiary
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.folder }}
          platforms: ${{ join(matrix.arch, ',') }}
          push: true
          pull: true
          tags: phpdockerio/${{ matrix.targets.tertiary.repo_name }}:${{ matrix.targets.tertiary.tag }}
          target: ${{ matrix.targets.tertiary.name }}
          cache-from: type=registry,ref=phpdockerio/${{ matrix.targets.tertiary.repo_name }}
          cache-to: inline
